name: Release

on:
  release:
    types:
      - created

env:
  VERSION: ${{ github.event.release.tag_name != '' && github.event.release.tag_name || '0.0.0' }}

jobs:
  pypi:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: 'pip'

      - name: Install Dependencies
        run: |
            pip3 install wheel
            pip3 install -r requirements.txt

      - name: Replace Version
        run: |
          sed -i "s/__VERSION__ = '0.0.0'/__VERSION__ = '${{ env.VERSION }}'/" aoirint_matvtool/__init__.py

      - name: Build Package
        run: python3 setup.py sdist bdist_wheel

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  binary:
    strategy:
      fail-fast: false
      matrix:
        include:
          - 
            os: 'ubuntu-18.04'
            artifact_name: matvtool
            asset_name: matvtool-linux-amd64
          - 
            os: 'windows-2019'
            artifact_name: matvtool.exe
            asset_name: matvtool-windows-amd64.exe
          - 
            os: 'macos-11'
            artifact_name: matvtool
            asset_name: matvtool-macos-amd64

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9.13'
          cache: 'pip'

      - name: Install Dependencies
        run: |
          pip3 install wheel
          pip3 install pyinstaller
          pip3 install -r requirements.txt

      - name: Replace Version
        run: |
          sed -i "s/__VERSION__ = '0.0.0'/__VERSION__ = '${{ env.VERSION }}'/" aoirint_matvtool/__init__.py

      - name: Build Binary
        run: |
          pyinstaller --name matvtool --onefile aoirint_matvtool/scripts/cli.py
      
      - name: Upload Binary to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
